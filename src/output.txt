In file included from Compressor.cpp:4:0:
Compressor.hpp:31:55: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual void compress(const char *input, char *output) override;
                                                       ^
Compressor.hpp:33:57: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual void decompress(const char *input, char *output) override;
                                                         ^
In file included from Encoder.cpp:4:0:
Encoder.hpp:45:52: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int encode(const char *input, char *output) override;
                                                    ^
Encoder.hpp:47:56: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int encode_ack(const char *input, char *output) override;
                                                        ^
Encoder.hpp:49:52: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int decode(const char *input, char *output) override;
                                                    ^
Encoder.hpp:51:56: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int decode_ack(const char *input, char *output) override;
                                                        ^
Encoder.hpp:58:39: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
  const std::size_t field_descriptor = 8;
                                       ^
Encoder.hpp:59:49: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
  const std::size_t generator_polynomial_index = 120;
                                                 ^
Encoder.hpp:60:48: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
  std::size_t generator_polynomial_root_count = 6;
                                                ^
Encoder.hpp:61:52: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
  std::size_t ack_generator_polynomial_root_count = 6;
                                                    ^
In file included from Encoder.hpp:10:0,
                 from Encoder.cpp:4:
schifra/schifra_galois_field.hpp: In constructor ‘EncoderRS::EncoderRS()’:
schifra/schifra_galois_field.hpp:190:10: error: ‘schifra::galois::field::field()’ is private
          field();
          ^
Encoder.cpp:14:22: error: within this context
 EncoderRS::EncoderRS()
                      ^
Encoder.cpp:14:22: error: no matching function for call to ‘schifra::galois::field_polynomial::field_polynomial()’
In file included from Encoder.hpp:11:0,
                 from Encoder.cpp:4:
schifra/schifra_galois_field_polynomial.hpp:163:14: note: candidate: schifra::galois::field_polynomial::field_polynomial(const schifra::galois::field_element&)
       inline field_polynomial::field_polynomial(const field_element& element)
              ^
schifra/schifra_galois_field_polynomial.hpp:163:14: note:   candidate expects 1 argument, 0 provided
schifra/schifra_galois_field_polynomial.hpp:158:14: note: candidate: schifra::galois::field_polynomial::field_polynomial(const schifra::galois::field_polynomial&)
       inline field_polynomial::field_polynomial(const field_polynomial& polynomial)
              ^
schifra/schifra_galois_field_polynomial.hpp:158:14: note:   candidate expects 1 argument, 0 provided
In file included from Encoder.hpp:11:0,
                 from Encoder.cpp:4:
schifra/schifra_galois_field_polynomial.hpp:138:14: note: candidate: schifra::galois::field_polynomial::field_polynomial(const schifra::galois::field&, const unsigned int&, const schifra::galois::field_element*)
       inline field_polynomial::field_polynomial(const field& gfield, const unsigned int& degree, const field_element element[])
              ^
schifra/schifra_galois_field_polynomial.hpp:138:14: note:   candidate expects 3 arguments, 0 provided
schifra/schifra_galois_field_polynomial.hpp:131:14: note: candidate: schifra::galois::field_polynomial::field_polynomial(const schifra::galois::field&, const unsigned int&)
       inline field_polynomial::field_polynomial(const field& gfield, const unsigned int& degree)
              ^
schifra/schifra_galois_field_polynomial.hpp:131:14: note:   candidate expects 2 arguments, 0 provided
schifra/schifra_galois_field_polynomial.hpp:124:14: note: candidate: schifra::galois::field_polynomial::field_polynomial(const schifra::galois::field&)
       inline field_polynomial::field_polynomial(const field& gfield)
              ^
schifra/schifra_galois_field_polynomial.hpp:124:14: note:   candidate expects 1 argument, 0 provided
Encoder.cpp:14:22: error: no matching function for call to ‘schifra::galois::field_polynomial::field_polynomial()’
 EncoderRS::EncoderRS()
                      ^
In file included from Encoder.hpp:11:0,
                 from Encoder.cpp:4:
schifra/schifra_galois_field_polynomial.hpp:163:14: note: candidate: schifra::galois::field_polynomial::field_polynomial(const schifra::galois::field_element&)
       inline field_polynomial::field_polynomial(const field_element& element)
              ^
schifra/schifra_galois_field_polynomial.hpp:163:14: note:   candidate expects 1 argument, 0 provided
schifra/schifra_galois_field_polynomial.hpp:158:14: note: candidate: schifra::galois::field_polynomial::field_polynomial(const schifra::galois::field_polynomial&)
       inline field_polynomial::field_polynomial(const field_polynomial& polynomial)
              ^
schifra/schifra_galois_field_polynomial.hpp:158:14: note:   candidate expects 1 argument, 0 provided
In file included from Encoder.hpp:11:0,
                 from Encoder.cpp:4:
schifra/schifra_galois_field_polynomial.hpp:138:14: note: candidate: schifra::galois::field_polynomial::field_polynomial(const schifra::galois::field&, const unsigned int&, const schifra::galois::field_element*)
       inline field_polynomial::field_polynomial(const field& gfield, const unsigned int& degree, const field_element element[])
              ^
schifra/schifra_galois_field_polynomial.hpp:138:14: note:   candidate expects 3 arguments, 0 provided
schifra/schifra_galois_field_polynomial.hpp:131:14: note: candidate: schifra::galois::field_polynomial::field_polynomial(const schifra::galois::field&, const unsigned int&)
       inline field_polynomial::field_polynomial(const field& gfield, const unsigned int& degree)
              ^
schifra/schifra_galois_field_polynomial.hpp:131:14: note:   candidate expects 2 arguments, 0 provided
schifra/schifra_galois_field_polynomial.hpp:124:14: note: candidate: schifra::galois::field_polynomial::field_polynomial(const schifra::galois::field&)
       inline field_polynomial::field_polynomial(const field& gfield)
              ^
schifra/schifra_galois_field_polynomial.hpp:124:14: note:   candidate expects 1 argument, 0 provided
Encoder.cpp:14:22: error: no matching function for call to ‘schifra::reed_solomon::shortened_encoder<32ul, 6ul, 26ul>::shortened_encoder()’
 EncoderRS::EncoderRS()
                      ^
In file included from Encoder.hpp:13:0,
                 from Encoder.cpp:4:
schifra/schifra_reed_solomon_encoder.hpp:142:10: note: candidate: schifra::reed_solomon::shortened_encoder<code_length, fec_length, data_length, natural_length, padding_length>::shortened_encoder(const schifra::galois::field&, const schifra::galois::field_polynomial&) [with long unsigned int code_length = 32ul; long unsigned int fec_length = 6ul; long unsigned int data_length = 26ul; long unsigned int natural_length = 255ul; long unsigned int padding_length = 223ul]
          shortened_encoder(const galois::field& gfield,
          ^
schifra/schifra_reed_solomon_encoder.hpp:142:10: note:   candidate expects 2 arguments, 0 provided
schifra/schifra_reed_solomon_encoder.hpp:134:13: note: candidate: schifra::reed_solomon::shortened_encoder<32ul, 6ul, 26ul>::shortened_encoder(const schifra::reed_solomon::shortened_encoder<32ul, 6ul, 26ul>&)
       class shortened_encoder
             ^
schifra/schifra_reed_solomon_encoder.hpp:134:13: note:   candidate expects 1 argument, 0 provided
Encoder.cpp:14:22: error: no matching function for call to ‘schifra::reed_solomon::shortened_decoder<32ul, 6ul, 26ul>::shortened_decoder()’
 EncoderRS::EncoderRS()
                      ^
In file included from Encoder.hpp:14:0,
                 from Encoder.cpp:4:
schifra/schifra_reed_solomon_decoder.hpp:408:10: note: candidate: schifra::reed_solomon::shortened_decoder<code_length, fec_length, data_length, natural_length, padding_length>::shortened_decoder(const schifra::galois::field&, unsigned int) [with long unsigned int code_length = 32ul; long unsigned int fec_length = 6ul; long unsigned int data_length = 26ul; long unsigned int natural_length = 255ul; long unsigned int padding_length = 223ul]
          shortened_decoder(const galois::field& field, const unsigned int gen_initial_index = 0)
          ^
schifra/schifra_reed_solomon_decoder.hpp:408:10: note:   candidate expects 2 arguments, 0 provided
schifra/schifra_reed_solomon_decoder.hpp:401:13: note: candidate: schifra::reed_solomon::shortened_decoder<32ul, 6ul, 26ul>::shortened_decoder(const schifra::reed_solomon::shortened_decoder<32ul, 6ul, 26ul>&)
       class shortened_decoder
             ^
schifra/schifra_reed_solomon_decoder.hpp:401:13: note:   candidate expects 1 argument, 0 provided
Encoder.cpp:14:22: error: no matching function for call to ‘schifra::reed_solomon::shortened_encoder<4ul, 2ul, 2ul>::shortened_encoder()’
 EncoderRS::EncoderRS()
                      ^
In file included from Encoder.hpp:13:0,
                 from Encoder.cpp:4:
schifra/schifra_reed_solomon_encoder.hpp:142:10: note: candidate: schifra::reed_solomon::shortened_encoder<code_length, fec_length, data_length, natural_length, padding_length>::shortened_encoder(const schifra::galois::field&, const schifra::galois::field_polynomial&) [with long unsigned int code_length = 4ul; long unsigned int fec_length = 2ul; long unsigned int data_length = 2ul; long unsigned int natural_length = 255ul; long unsigned int padding_length = 251ul]
          shortened_encoder(const galois::field& gfield,
          ^
schifra/schifra_reed_solomon_encoder.hpp:142:10: note:   candidate expects 2 arguments, 0 provided
schifra/schifra_reed_solomon_encoder.hpp:134:13: note: candidate: schifra::reed_solomon::shortened_encoder<4ul, 2ul, 2ul>::shortened_encoder(const schifra::reed_solomon::shortened_encoder<4ul, 2ul, 2ul>&)
       class shortened_encoder
             ^
schifra/schifra_reed_solomon_encoder.hpp:134:13: note:   candidate expects 1 argument, 0 provided
Encoder.cpp:14:22: error: no matching function for call to ‘schifra::reed_solomon::shortened_decoder<4ul, 2ul, 2ul>::shortened_decoder()’
 EncoderRS::EncoderRS()
                      ^
In file included from Encoder.hpp:14:0,
                 from Encoder.cpp:4:
schifra/schifra_reed_solomon_decoder.hpp:408:10: note: candidate: schifra::reed_solomon::shortened_decoder<code_length, fec_length, data_length, natural_length, padding_length>::shortened_decoder(const schifra::galois::field&, unsigned int) [with long unsigned int code_length = 4ul; long unsigned int fec_length = 2ul; long unsigned int data_length = 2ul; long unsigned int natural_length = 255ul; long unsigned int padding_length = 251ul]
          shortened_decoder(const galois::field& field, const unsigned int gen_initial_index = 0)
          ^
schifra/schifra_reed_solomon_decoder.hpp:408:10: note:   candidate expects 2 arguments, 0 provided
schifra/schifra_reed_solomon_decoder.hpp:401:13: note: candidate: schifra::reed_solomon::shortened_decoder<4ul, 2ul, 2ul>::shortened_decoder(const schifra::reed_solomon::shortened_decoder<4ul, 2ul, 2ul>&)
       class shortened_decoder
             ^
schifra/schifra_reed_solomon_decoder.hpp:401:13: note:   candidate expects 1 argument, 0 provided
In file included from Encoder.hpp:10:0,
                 from Encoder.cpp:4:
schifra/schifra_galois_field.hpp:192:17: error: ‘schifra::galois::field& schifra::galois::field::operator=(const schifra::galois::field&)’ is private
          field& operator=(const field& gfield);
                 ^
Encoder.cpp:16:8: error: within this context
  field = schifra::galois::field(field_descriptor,
        ^
In file included from Encoder.hpp:13:0,
                 from Encoder.cpp:4:
schifra/schifra_reed_solomon_encoder.hpp: In member function ‘schifra::reed_solomon::shortened_encoder<32ul, 6ul, 26ul>& schifra::reed_solomon::shortened_encoder<32ul, 6ul, 26ul>::operator=(const schifra::reed_solomon::shortened_encoder<32ul, 6ul, 26ul>&)’:
schifra/schifra_reed_solomon_encoder.hpp:134:13: error: non-static const member ‘const schifra::reed_solomon::encoder<255ul, 6ul, 249ul> schifra::reed_solomon::shortened_encoder<32ul, 6ul, 26ul>::encoder_’, can’t use default assignment operator
       class shortened_encoder
             ^
Encoder.cpp: In constructor ‘EncoderRS::EncoderRS()’:
Encoder.cpp:42:13: note: synthesized method ‘schifra::reed_solomon::shortened_encoder<32ul, 6ul, 26ul>& schifra::reed_solomon::shortened_encoder<32ul, 6ul, 26ul>::operator=(const schifra::reed_solomon::shortened_encoder<32ul, 6ul, 26ul>&)’ first required here 
     encoder = encoder_t(field, generator_polynomial);
             ^
In file included from Encoder.hpp:14:0,
                 from Encoder.cpp:4:
schifra/schifra_reed_solomon_decoder.hpp: In member function ‘schifra::reed_solomon::shortened_decoder<32ul, 6ul, 26ul>& schifra::reed_solomon::shortened_decoder<32ul, 6ul, 26ul>::operator=(const schifra::reed_solomon::shortened_decoder<32ul, 6ul, 26ul>&)’:
schifra/schifra_reed_solomon_decoder.hpp:401:13: error: non-static const member ‘const natural_decoder_type schifra::reed_solomon::shortened_decoder<32ul, 6ul, 26ul>::decoder_’, can’t use default assignment operator
       class shortened_decoder
             ^
Encoder.cpp: In constructor ‘EncoderRS::EncoderRS()’:
Encoder.cpp:43:13: note: synthesized method ‘schifra::reed_solomon::shortened_decoder<32ul, 6ul, 26ul>& schifra::reed_solomon::shortened_decoder<32ul, 6ul, 26ul>::operator=(const schifra::reed_solomon::shortened_decoder<32ul, 6ul, 26ul>&)’ first required here 
     decoder = decoder_t(field, generator_polynomial_index);
             ^
In file included from Encoder.hpp:13:0,
                 from Encoder.cpp:4:
schifra/schifra_reed_solomon_encoder.hpp: In member function ‘schifra::reed_solomon::shortened_encoder<4ul, 2ul, 2ul>& schifra::reed_solomon::shortened_encoder<4ul, 2ul, 2ul>::operator=(const schifra::reed_solomon::shortened_encoder<4ul, 2ul, 2ul>&)’:
schifra/schifra_reed_solomon_encoder.hpp:134:13: error: non-static const member ‘const schifra::reed_solomon::encoder<255ul, 2ul, 253ul> schifra::reed_solomon::shortened_encoder<4ul, 2ul, 2ul>::encoder_’, can’t use default assignment operator
       class shortened_encoder
             ^
Encoder.cpp: In constructor ‘EncoderRS::EncoderRS()’:
Encoder.cpp:45:17: note: synthesized method ‘schifra::reed_solomon::shortened_encoder<4ul, 2ul, 2ul>& schifra::reed_solomon::shortened_encoder<4ul, 2ul, 2ul>::operator=(const schifra::reed_solomon::shortened_encoder<4ul, 2ul, 2ul>&)’ first required here 
     ack_encoder = ack_encoder_t(field, ack_generator_polynomial);
                 ^
In file included from Encoder.hpp:14:0,
                 from Encoder.cpp:4:
schifra/schifra_reed_solomon_decoder.hpp: In member function ‘schifra::reed_solomon::shortened_decoder<4ul, 2ul, 2ul>& schifra::reed_solomon::shortened_decoder<4ul, 2ul, 2ul>::operator=(const schifra::reed_solomon::shortened_decoder<4ul, 2ul, 2ul>&)’:
schifra/schifra_reed_solomon_decoder.hpp:401:13: error: non-static const member ‘const natural_decoder_type schifra::reed_solomon::shortened_decoder<4ul, 2ul, 2ul>::decoder_’, can’t use default assignment operator
       class shortened_decoder
             ^
Encoder.cpp: In constructor ‘EncoderRS::EncoderRS()’:
Encoder.cpp:46:17: note: synthesized method ‘schifra::reed_solomon::shortened_decoder<4ul, 2ul, 2ul>& schifra::reed_solomon::shortened_decoder<4ul, 2ul, 2ul>::operator=(const schifra::reed_solomon::shortened_decoder<4ul, 2ul, 2ul>&)’ first required here 
     ack_decoder = ack_decoder_t(field, generator_polynomial_index);
                 ^
Encoder.cpp: In member function ‘virtual int EncoderRS::decode(const char*, char*)’:
Encoder.cpp:84:42: error: ‘EncoderRS::s_code’ cannot appear in a constant-expression
     block = schifra::reed_solomon::block<s_code.code_length,s_code.fec_length>(data, fec);
                                          ^
Encoder.cpp:84:49: error: ‘.’ cannot appear in a constant-expression
     block = schifra::reed_solomon::block<s_code.code_length,s_code.fec_length>(data, fec);
                                                 ^
Encoder.cpp:84:61: error: ‘EncoderRS::s_code’ cannot appear in a constant-expression
     block = schifra::reed_solomon::block<s_code.code_length,s_code.fec_length>(data, fec);
                                                             ^
Encoder.cpp:84:68: error: ‘.’ cannot appear in a constant-expression
     block = schifra::reed_solomon::block<s_code.code_length,s_code.fec_length>(data, fec);
                                                                    ^
Encoder.cpp:84:78: error: template argument 1 is invalid
     block = schifra::reed_solomon::block<s_code.code_length,s_code.fec_length>(data, fec);
                                                                              ^
Encoder.cpp:84:78: error: template argument 2 is invalid
Encoder.cpp:84:78: error: template argument 3 is invalid
Encoder.cpp:93:20: error: invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘char*’
   output = (char *)corrected;
                    ^
Encoder.cpp: In member function ‘virtual int EncoderRS::decode_ack(const char*, char*)’:
Encoder.cpp:107:46: error: ‘EncoderRS::s_ack’ cannot appear in a constant-expression
     ack_block = schifra::reed_solomon::block<s_ack.code_length,s_ack.fec_length>(data, fec);
                                              ^
Encoder.cpp:107:52: error: ‘.’ cannot appear in a constant-expression
     ack_block = schifra::reed_solomon::block<s_ack.code_length,s_ack.fec_length>(data, fec);
                                                    ^
Encoder.cpp:107:64: error: ‘EncoderRS::s_ack’ cannot appear in a constant-expression
     ack_block = schifra::reed_solomon::block<s_ack.code_length,s_ack.fec_length>(data, fec);
                                                                ^
Encoder.cpp:107:70: error: ‘.’ cannot appear in a constant-expression
     ack_block = schifra::reed_solomon::block<s_ack.code_length,s_ack.fec_length>(data, fec);
                                                                      ^
Encoder.cpp:107:80: error: template argument 1 is invalid
     ack_block = schifra::reed_solomon::block<s_ack.code_length,s_ack.fec_length>(data, fec);
                                                                                ^
Encoder.cpp:107:80: error: template argument 2 is invalid
Encoder.cpp:107:80: error: template argument 3 is invalid
Encoder.cpp:116:20: error: invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘char*’
   output = (char *)ack_corrected;
                    ^
In file included from Protocol.hpp:6:0,
                 from Protocol.cpp:4:
Compressor.hpp:31:55: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual void compress(const char *input, char *output) override;
                                                       ^
Compressor.hpp:33:57: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual void decompress(const char *input, char *output) override;
                                                         ^
In file included from Protocol.hpp:7:0,
                 from Protocol.cpp:4:
Socket.hpp:33:47: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int read_blocking(char *buff, int len) override;
                                               ^
Socket.hpp:35:83: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int read_non_blocking(char *buff, int len, int timeout, int *timeout_info) override;
                                                                                   ^
Socket.hpp:37:52: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int write_socket(const char *buff, int len) override;
                                                    ^
In file included from Protocol.hpp:8:0,
                 from Protocol.cpp:4:
Encoder.hpp:45:52: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int encode(const char *input, char *output) override;
                                                    ^
Encoder.hpp:47:56: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int encode_ack(const char *input, char *output) override;
                                                        ^
Encoder.hpp:49:52: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int decode(const char *input, char *output) override;
                                                    ^
Encoder.hpp:51:56: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int decode_ack(const char *input, char *output) override;
                                                        ^
Encoder.hpp:58:39: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
  const std::size_t field_descriptor = 8;
                                       ^
Encoder.hpp:59:49: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
  const std::size_t generator_polynomial_index = 120;
                                                 ^
Encoder.hpp:60:48: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
  std::size_t generator_polynomial_root_count = 6;
                                                ^
Encoder.hpp:61:52: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
  std::size_t ack_generator_polynomial_root_count = 6;
                                                    ^
In file included from Protocol.cpp:4:0:
Protocol.hpp:36:40: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int send_text(const char *text) override;
                                        ^
Protocol.hpp:38:27: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int receive_text() override;
                           ^
In file included from Socket.cpp:3:0:
Socket.hpp:33:47: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int read_blocking(char *buff, int len) override;
                                               ^
Socket.hpp:35:83: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int read_non_blocking(char *buff, int len, int timeout, int *timeout_info) override;
                                                                                   ^
Socket.hpp:37:52: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int write_socket(const char *buff, int len) override;
                                                    ^
In file included from Protocol.hpp:6:0,
                 from main.cpp:5:
Compressor.hpp:31:55: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual void compress(const char *input, char *output) override;
                                                       ^
Compressor.hpp:33:57: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual void decompress(const char *input, char *output) override;
                                                         ^
In file included from Protocol.hpp:7:0,
                 from main.cpp:5:
Socket.hpp:33:47: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int read_blocking(char *buff, int len) override;
                                               ^
Socket.hpp:35:83: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int read_non_blocking(char *buff, int len, int timeout, int *timeout_info) override;
                                                                                   ^
Socket.hpp:37:52: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int write_socket(const char *buff, int len) override;
                                                    ^
In file included from Protocol.hpp:8:0,
                 from main.cpp:5:
Encoder.hpp:45:52: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int encode(const char *input, char *output) override;
                                                    ^
Encoder.hpp:47:56: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int encode_ack(const char *input, char *output) override;
                                                        ^
Encoder.hpp:49:52: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int decode(const char *input, char *output) override;
                                                    ^
Encoder.hpp:51:56: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int decode_ack(const char *input, char *output) override;
                                                        ^
Encoder.hpp:58:39: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
  const std::size_t field_descriptor = 8;
                                       ^
Encoder.hpp:59:49: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
  const std::size_t generator_polynomial_index = 120;
                                                 ^
Encoder.hpp:60:48: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
  std::size_t generator_polynomial_root_count = 6;
                                                ^
Encoder.hpp:61:52: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
  std::size_t ack_generator_polynomial_root_count = 6;
                                                    ^
In file included from main.cpp:5:0:
Protocol.hpp:36:40: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int send_text(const char *text) override;
                                        ^
Protocol.hpp:38:27: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual int receive_text() override;
                           ^
main.cpp: In function ‘int main(int, char**)’:
main.cpp:30:51: error: no matching function for call to ‘StopWait::StopWait(Compressor1*, EncoderRS (*)(), SocketTCP*)’
   StopWait protocol(&compressor, &encoder, &socket);
                                                   ^
In file included from main.cpp:5:0:
Protocol.hpp:34:2: note: candidate: StopWait::StopWait(Compressor*, Encoder*, Socket*)
  StopWait(Compressor *comp, Encoder *enc, Socket *sck);
  ^
Protocol.hpp:34:2: note:   no known conversion for argument 2 from ‘EncoderRS (*)()’ to ‘Encoder*’
Protocol.hpp:32:7: note: candidate: StopWait::StopWait(const StopWait&)
 class StopWait: public Protocol {
       ^
Protocol.hpp:32:7: note:   candidate expects 1 argument, 3 provided
main.cpp:51:51: error: no matching function for call to ‘StopWait::StopWait(Compressor1*, EncoderRS (*)(), SocketTCP*)’
   StopWait protocol(&compressor, &encoder, &socket);
                                                   ^
In file included from main.cpp:5:0:
Protocol.hpp:34:2: note: candidate: StopWait::StopWait(Compressor*, Encoder*, Socket*)
  StopWait(Compressor *comp, Encoder *enc, Socket *sck);
  ^
Protocol.hpp:34:2: note:   no known conversion for argument 2 from ‘EncoderRS (*)()’ to ‘Encoder*’
Protocol.hpp:32:7: note: candidate: StopWait::StopWait(const StopWait&)
 class StopWait: public Protocol {
       ^
Protocol.hpp:32:7: note:   candidate expects 1 argument, 3 provided
